// <auto-generated />
using System;
using LPCRM.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LPCRM.Api.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("LPCRM.Entity.Model.ContactGroup", b =>
                {
                    b.Property<Guid>("ContactGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int>("FundVehicleId");

                    b.Property<string>("InvestorGroupName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.Property<int?>("Sorting");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("ContactGroupId");

                    b.HasIndex("FundVehicleId");

                    b.ToTable("ContactGroup");
                });

            modelBuilder.Entity("LPCRM.Entity.Model.ContactGroupType", b =>
                {
                    b.Property<Guid>("ContactGroupTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContactType")
                        .HasColumnType("json");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<Guid>("InvestorContactGroupId");

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.Property<int?>("Sorting");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("ContactGroupTypeId");

                    b.HasIndex("InvestorContactGroupId");

                    b.ToTable("ContactGroupType");
                });

            modelBuilder.Entity("LPCRM.Entity.Model.ContactList", b =>
                {
                    b.Property<Guid>("ContactListId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ContactGroupTypeId");

                    b.Property<DateTime>("ContactValidFrom");

                    b.Property<string>("ContactValidTo");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<Guid>("InvContactID");

                    b.Property<bool?>("IsActive");

                    b.Property<bool>("IsAdvisoryBoard");

                    b.Property<bool>("IsAttachment");

                    b.Property<bool>("IsCurrentContact");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.Property<int?>("Sorting");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("ContactListId");

                    b.HasIndex("ContactGroupTypeId");

                    b.HasIndex("InvContactID");

                    b.ToTable("ContactList");
                });

            modelBuilder.Entity("LPCRM.Entity.Model.ContactType", b =>
                {
                    b.Property<int>("ContactTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContactTypeName");

                    b.HasKey("ContactTypeId");

                    b.ToTable("ContactType");
                });

            modelBuilder.Entity("LPCRM.Entity.Model.FundVehicle", b =>
                {
                    b.Property<int>("FundVehicleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FundVehicleName");

                    b.HasKey("FundVehicleId");

                    b.ToTable("FundVehicle");
                });

            modelBuilder.Entity("LPCRM.Entity.Model.InvestorContact", b =>
                {
                    b.Property<Guid>("InvContactID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("ContactNote");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("FaxNumber");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Remarks");

                    b.Property<int?>("Sorting");

                    b.Property<string>("Title");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("InvContactID");

                    b.ToTable("InvestorContact");
                });

            modelBuilder.Entity("LPCRM.Entity.Model.InvestorContactGroup", b =>
                {
                    b.Property<Guid>("InvestorContactGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ContactGroupId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("InvestorEntity")
                        .HasColumnType("json");

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.Property<int?>("Sorting");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("InvestorContactGroupId");

                    b.HasIndex("ContactGroupId");

                    b.ToTable("InvestorContactGroup");
                });

            modelBuilder.Entity("LPCRM.Entity.Model.InvestorEntity", b =>
                {
                    b.Property<int>("InvestorEntityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("InvestorEntityName");

                    b.HasKey("InvestorEntityId");

                    b.ToTable("InvestorEntity");
                });

            modelBuilder.Entity("LPCRM.Entity.Model.ContactGroup", b =>
                {
                    b.HasOne("LPCRM.Entity.Model.FundVehicle", "FundVehicle")
                        .WithMany()
                        .HasForeignKey("FundVehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LPCRM.Entity.Model.ContactGroupType", b =>
                {
                    b.HasOne("LPCRM.Entity.Model.InvestorContactGroup")
                        .WithMany("ContactGroupTypes")
                        .HasForeignKey("InvestorContactGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LPCRM.Entity.Model.ContactList", b =>
                {
                    b.HasOne("LPCRM.Entity.Model.ContactGroupType")
                        .WithMany("ContactList")
                        .HasForeignKey("ContactGroupTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LPCRM.Entity.Model.InvestorContact", "InvestorContact")
                        .WithMany()
                        .HasForeignKey("InvContactID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LPCRM.Entity.Model.InvestorContactGroup", b =>
                {
                    b.HasOne("LPCRM.Entity.Model.ContactGroup")
                        .WithMany("InvestorContactGroup")
                        .HasForeignKey("ContactGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
